version: '3.7'
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 8080:8080
    depends_on:
      mysqldb:
        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysqldb:3306/SPRINGTEST
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=123456
    networks:
      - springboot-mysql-network

  mysqldb:
    image: mysql:9-oracle
    ports:
      - 3306:3306
    environment:
      - MYSQL_DATABASE=SPRINGTEST
      - MYSQL_ROOT_PASSWORD=123456
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - springboot-mysql-network
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      retries: 10
      interval: 3s
      timeout: 30s

  jenkins:
    image: my-jenkins-docker
    container_name: jenkins
    ports:
      - 8081:8080
      - 50000:50000
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - springboot-mysql-network
    environment:
      - JAVA_OPTS=-Djenkins.install.runSetupWizard=false
    depends_on:
      - app
      - mysqldb
    privileged: true
#
#  docker-dind:
#    image: docker:20.10-dind
#    container_name: docker-dind
#    privileged: true
#    ports:
#      - 2375:2375
#    environment:
#      - DOCKER_TLS_CERTDIR=""
#    volumes:
#      - /var/lib/docker
#    networks:
#      - springboot-mysql-network

volumes:
  mysql-data:
  jenkins_home:

networks:
  springboot-mysql-network:
    name: springboot-mysql-network